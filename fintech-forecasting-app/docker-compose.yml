version: "3.8"

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: fintech-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: fintech_forecasting
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - fintech-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Flask API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fintech-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/
      - MONGODB_DB_NAME=fintech_forecasting
      - FLASK_ENV=production
      - LOG_LEVEL=INFO
      - CORS_ORIGINS=http://localhost:3000,http://frontend:3000
    volumes:
      - ./backend/logs:/app/logs
      - backend_models:/app/models
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - fintech-network
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import requests; requests.get('http://localhost:5000/health')",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Next.js
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fintech-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:5000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - fintech-network
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3000', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  fintech-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  backend_models:
    driver: local
